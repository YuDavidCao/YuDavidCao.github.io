{"version":3,"file":"canonical-url-sharing-on-mobile-browsers-and-a-workaround-for-static-sites-C9aP1e9D.js","sources":["../../src/pages/blogs/Blog/canonical-url-sharing-on-mobile-browsers-and-a-workaround-for-static-sites.tsx"],"sourcesContent":["import { InlineCode } from \"../../../../components/blog-content/inline-code\";\nimport { CodeBlock } from \"../../../../components/blog-content/code-block\";\nimport { BlogFooter } from \"../../../../components/blog-content/blog-footer\";\nimport { BlogHeader } from \"../../../../components/blog-content.tsx\";\nimport heroImg from '../../../../assets/blogs/canonical-url-sharing-on-mobile-browsers-and-a-workaround-for-static-sites/hero.png';\n\nexport function CanonicalUrlSharingOnMobileBrowsersAndAWorkaroundForStaticSites() {\n  return (\n    <>\n      <title>Canonical URL sharing on mobile browsers and a workaround for static sites</title>\n      <meta name=\"description\" content=\"Why mobile browsers share canonical URLs, the pros and cons, and a workaround for static sites to preserve user context when sharing links.\" />\n      <meta property=\"og:title\" content=\"Canonical URL sharing on mobile browsers and a workaround for static sites\" />\n      <meta property=\"og:description\" content=\"Why mobile browsers share canonical URLs, the pros and cons, and a workaround for static sites to preserve user context when sharing links.\" />\n      <link rel=\"canonical\" href=\"https://yudavidcao.github.io/blog/canonical-url-sharing-on-mobile-browsers-and-a-workaround-for-static-sites\" />\n      <div className=\"w-3/5 flex gap-4 text-xl rounded-lg py-4 flex-col font-sans dark:bg-dark-primary dark:text-dark-tx-primary\">\n        <BlogHeader\n          title=\"Canonical URL sharing on mobile browsers and a workaround for static sites\"\n          date=\"June 6, 2025\"\n          heroImgSrc={heroImg}\n          heroImgAlt=\"Canonical URL sharing on mobile browsers and a workaround for static sites Hero\"\n        />\n        <article className=\"prose prose-lg max-w-none font-sans dark:prose-invert\">\n          <p className=\"mb-4\">\n            On mobile browsers like Safari and Chrome, sharing or bookmarking a\n            page often uses the canonical URL instead of the current URL, which\n            can strip query parameters and fragments that are important for users.\n            This behavior, originally intended to help search engines, can cause\n            confusion and loss of context for users sharing filtered or specific\n            views of a page.\n          </p>\n          <p className=\"mb-4\">\n            The article explores why browsers do this, the pros and cons, and\n            offers a workaround for static sites: dynamically updating the\n            canonical link with JavaScript to reflect the current URL, ensuring\n            shared links preserve user context. The post also summarizes browser\n            behaviors and suggests that browsers could offer user-facing options\n            for sharing canonical vs. current URLs.\n          </p>\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            Why do browsers share canonical URLs?\n          </h2>\n          <p className=\"mb-4\">\n            Canonical URLs were designed for search engines to identify the\n            preferred version of a page, especially when there are duplicates with\n            different query parameters. Around 2017, browsers started using\n            canonical URLs for sharing/bookmarking, mainly to help users get the\n            original article instead of AMP or cached versions. However, this\n            general mechanism now affects all sites using{\" \"}\n            {<InlineCode>{'<link rel=\"canonical\" />'}</InlineCode>}.\n          </p>\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            Pros and cons for users\n          </h2>\n          <p className=\"mb-4\">\n            <strong>Pros:</strong> Strips tracking and unnecessary parameters,\n            sometimes improving privacy. <br />\n            <strong>Cons:</strong> Users may lose important context (filters,\n            fragments, etc.) when sharing/bookmarking, leading to confusion or\n            loss of intent.\n          </p>\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            Browser behavior summary\n          </h2>\n          <p className=\"mb-4\">\n            - Android: Chrome shares canonical (keeps fragment), Firefox/Samsung\n            share original.\n            <br />\n            - iOS: Safari/Chrome/Edge share canonical (lose fragment), Firefox\n            shares original.\n            <br />- Desktop: Most share original URL.\n          </p>\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            Workaround for static sites\n          </h2>\n          <p className=\"mb-4\">\n            For static sites, you can use JavaScript to update the canonical link\n            dynamically as the user navigates or changes filters. This ensures the\n            canonical URL matches the current view, so sharing/bookmarking\n            preserves the full context.\n          </p>\n          <CodeBlock\n            language=\"javascript\"\n            code={`const canonical = document.querySelector('link[rel=\"canonical\"]');\nif (canonical) {\n  canonical.href = window.location.href;\n}`}\n          />\n          <p className=\"mb-4\">\n            This approach is not perfect, but it helps mitigate the issue for\n            static sites.\n          </p>\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            Conclusion\n          </h2>\n          <p className=\"mb-4\">\n            Mobile browsers' use of canonical URLs for sharing/bookmarking can be\n            problematic for users. Developers can work around this on static\n            sites, but ideally, browsers should offer users a choice between\n            sharing the canonical or current URL.\n          </p>\n          <BlogFooter url=\"https://medium.com/@yu.cao20041208/canonical-url-sharing-on-mobile-browsers-and-a-workaround-for-static-sites-bab360d29835\" />\n        </article>\n      </div>\n    </>\n  );\n}\n"],"names":["CanonicalUrlSharingOnMobileBrowsersAndAWorkaroundForStaticSites","jsxs","Fragment","jsx","BlogHeader","heroImg","InlineCode","CodeBlock","BlogFooter"],"mappings":"ygBAMO,SAASA,GAAkE,CAChF,OACEC,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAC,EAAAA,IAAC,SAAM,SAAA,4EAAA,CAA0E,EACjFA,EAAAA,IAAC,OAAA,CAAK,KAAK,cAAc,QAAQ,8IAA8I,EAC/KA,EAAAA,IAAC,OAAA,CAAK,SAAS,WAAW,QAAQ,6EAA6E,EAC/GA,EAAAA,IAAC,OAAA,CAAK,SAAS,iBAAiB,QAAQ,8IAA8I,EACtLA,EAAAA,IAAC,OAAA,CAAK,IAAI,YAAY,KAAK,+GAA+G,EAC1IF,EAAAA,KAAC,MAAA,CAAI,UAAU,6GACb,SAAA,CAAAE,EAAAA,IAACC,EAAA,CACC,MAAM,6EACN,KAAK,eACL,WAAYC,EACZ,WAAW,iFAAA,CAAA,EAEbJ,EAAAA,KAAC,UAAA,CAAQ,UAAU,wDACjB,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAE,UAAU,OAAO,SAAA,4WAOpB,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,OAAO,SAAA,yXAOpB,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,wCAExE,EACAF,EAAAA,KAAC,IAAA,CAAE,UAAU,OAAO,SAAA,CAAA,8XAM4B,IAC7CE,EAAAA,IAACG,GAAY,SAAA,0BAAA,CAA2B,EAAc,GAAA,EACzD,EACAH,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,0BAExE,EACAF,EAAAA,KAAC,IAAA,CAAE,UAAU,OACX,SAAA,CAAAE,EAAAA,IAAC,UAAO,SAAA,OAAA,CAAK,EAAS,mFACQ,KAAA,EAAG,EACjCA,EAAAA,IAAC,UAAO,SAAA,OAAA,CAAK,EAAS,gIAAA,EAGxB,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,2BAExE,EACAF,EAAAA,KAAC,IAAA,CAAE,UAAU,OAAO,SAAA,CAAA,6FAGjB,KAAA,EAAG,EAAE,4FAGL,KAAA,EAAG,EAAE,qCAAA,EACR,EACAE,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,8BAExE,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,OAAO,SAAA,0OAKpB,EACAA,EAAAA,IAACI,EAAA,CACC,SAAS,aACT,KAAM;AAAA;AAAA;AAAA,EAAA,CAAA,EAKRJ,EAAAA,IAAC,IAAA,CAAE,UAAU,OAAO,SAAA,kFAGpB,EACAA,EAAAA,IAAC,KAAA,CAAG,UAAU,0DAA0D,SAAA,aAExE,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,OAAO,SAAA,gPAKpB,EACAA,EAAAA,IAACK,EAAA,CAAW,IAAI,4HAAA,CAA6H,CAAA,CAAA,CAC/I,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}