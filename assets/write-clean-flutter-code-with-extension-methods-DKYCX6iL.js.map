{"version":3,"file":"write-clean-flutter-code-with-extension-methods-DKYCX6iL.js","sources":["../../src/pages/blogs/Blog/write-clean-flutter-code-with-extension-methods.tsx"],"sourcesContent":["import { InlineCode } from \"../../../../components/blog-content/inline-code\";\nimport { CodeBlock } from \"../../../../components/blog-content/code-block\";\nimport { BlogFooter } from \"../../../../components/blog-content/blog-footer\";\nimport { BlogHeader } from \"../../../../components/blog-content.tsx\";\nimport heroImg from '../../../../assets/blogs/write-clean-flutter-code-with-extension-methods/hero.png';\n\nexport function WriteCleanFlutterCodeWithExtensionMethods() {\n  return (\n    <>\n      <title>Write clean Flutter code with extension methods</title>\n      <meta name=\"description\" content=\"Learn how to use extension methods in Flutter to write cleaner, more maintainable code with practical examples.\" />\n      <meta property=\"og:title\" content=\"Write clean Flutter code with extension methods\" />\n      <meta property=\"og:description\" content=\"Learn how to use extension methods in Flutter to write cleaner, more maintainable code with practical examples.\" />\n      <link rel=\"canonical\" href=\"https://yudavidcao.github.io/blog/write-clean-flutter-code-with-extension-methods\" />\n      <div className=\"w-3/5 flex gap-4 text-xl rounded-lg py-4 flex-col font-sans dark:bg-dark-primary dark:text-dark-tx-primary\">\n        <BlogHeader\n          title=\"Write clean Flutter code with extension methods\"\n          date=\"June 12, 2024\"\n          heroImgSrc={heroImg}\n          heroImgAlt=\"Write clean Flutter code with extension methods Hero\"\n        />\n        <article className=\"prose prose-lg max-w-none font-sans dark:prose-invert\">\n          <p className=\"mb-4\">\n            Have you ever encountered a situation where the Flutter implementation\n            of a class just lacks some stuff? For instance, imagine you only want\n            the year, month, and day information from a{\" \"}\n            <InlineCode>DateTime</InlineCode> object. Your first instinct might be\n            to check for an existing function on the{\" \"}\n            <InlineCode>DateTime</InlineCode> class, but sadly, it doesn't exist.\n            Here's what you would typically have to do:\n          </p>\n          <CodeBlock\n            language=\"dart\"\n            code={`void main() {\n  DateTime now = DateTime.now();\n  print(DateTime(now.year, now.month, now.day));\n}`}\n          />\n          <p className=\"mb-4\">\n            Pretty tedious and ugly right? Don't worry, extension got you covered:\n          </p>\n          <CodeBlock\n            language=\"dart\"\n            code={`void main() {\n  DateTime now = DateTime.now();\n  print(now.getDateOnly());\n}\n\nextension DateOnly on DateTime {\n  DateTime getDateOnly() {\n    return DateTime(this.year, this.month, this.day);\n  }\n}`}\n          />\n          <p className=\"mb-4\">\n            With the <InlineCode>DateOnly</InlineCode> extension, if you have a{\" \"}\n            <InlineCode>DateTime</InlineCode> object and you only want the date\n            information, just call the <InlineCode>.getDateOnly()</InlineCode>{\" \"}\n            method.\n          </p>\n          <p className=\"mb-4\">\n            <strong>How Does Extension Work?</strong>\n            <br />\n            Extension allows us to add on additional method to an existing class\n            without modifying the original source code file. Extensions can define\n            not just methods, but also other members such as getter, setters, and\n            operators.\n          </p>\n          <blockquote className=\"mb-4\">\n            Note: adding new non-static class variables are forbidden\n          </blockquote>\n          <p className=\"mb-4\">Here's the syntax:</p>\n          <CodeBlock\n            language=\"dart\"\n            code={`extension SomeExtension on TargetedClass {\n  ReturnType someMethod(){\n    doSomething\n  }\n}`}\n          />\n          <h2 className=\"font-serif text-3xl font-bold mt-10 mb-4 tracking-tight\">\n            More Useful Examples on Extension\n          </h2>\n          <p className=\"mb-4\">\n            <strong>Capitalize the first letter of a string:</strong>\n          </p>\n          <CodeBlock\n            language=\"dart\"\n            code={`extension Capitalize on String {\n    String capitalize() {\n      return \"\\${this[0].toUpperCase()}\\${this.substring(1).toLowerCase()}\";\n    }\n}`}\n          />\n          <p className=\"mb-4\">\n            <strong>Make an existing color lighter:</strong>\n          </p>\n          <CodeBlock\n            language=\"dart\"\n            code={`extension Lighten on Color {\n  Color lighten([double amount = .1]) {\n    assert(amount >= 0 && amount <= 1);\n    final hsl = HSLColor.fromColor(this);\n    final hslLight =\n        hsl.withLightness((hsl.lightness + amount).clamp(0.0, 1.0));\n\n    return hslLight.toColor();\n  }\n}`}\n          />\n          <p className=\"mb-4\">\n            These are just a few examples. There are multiple extension packages\n            available online for common use cases like{\" \"}\n            <InlineCode>isEmail</InlineCode>, <InlineCode>isToday</InlineCode>,{\" \"}\n            <InlineCode>isSameWeek</InlineCode>, and more. Remember, you can\n            always create your own extension methods based on your needs.\n          </p>\n          <p className=\"mb-4\">\n            The official documentation on extension methods can be found here.\n          </p>\n          <p className=\"mb-4\">\n            Hopefully, you learned something new! Happy coding!\n          </p>\n          <BlogFooter url=\"https://medium.com/p/cd1cc9e52a8a\" />\n        </article>\n      </div>\n    </>\n  );\n}\n"],"names":["WriteCleanFlutterCodeWithExtensionMethods","jsxs","Fragment","jsx","BlogHeader","heroImg","InlineCode","CodeBlock","BlogFooter"],"mappings":"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"}